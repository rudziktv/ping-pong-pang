//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Packages/Engine/Input/StandardInputScheme.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @StandardInputScheme: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @StandardInputScheme()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""StandardInputScheme"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""ea1d704d-829c-405d-83b2-0f3009c5db59"",
            ""actions"": [
                {
                    ""name"": ""TypeAD"",
                    ""type"": ""Value"",
                    ""id"": ""bf80608e-bb29-4807-bdb2-48a2c9d9bba8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TypeWS"",
                    ""type"": ""Value"",
                    ""id"": ""400f7dac-e0bc-42a0-8440-c669ed03faaf"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TypeLeftRight"",
                    ""type"": ""Button"",
                    ""id"": ""089b7cb5-69c5-4d03-a467-b549df2c6f01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TypeUpDown"",
                    ""type"": ""Button"",
                    ""id"": ""aa174845-84ff-4354-9825-8412e6dd4116"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1f23c236-648a-49cf-ac43-e554f188f7a8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeAD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1ec09b4a-cc59-40a9-b961-dcbd9b863b92"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeAD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2e34913e-8a64-46a6-b9c2-11b2004f6784"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeAD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""431ced06-ed24-43e4-9f32-21f7aeff8a07"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeWS"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4345087b-ebeb-427b-a003-a41b431f1802"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeWS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""dab57a9f-7a7f-46e2-9eed-b0e27cfc966b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeWS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5ba47187-b837-4612-9ec2-c4c5d42d38ce"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeLeftRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f17ec811-9248-474a-a6a6-1952fac13860"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""16e76502-257d-4e95-a567-34698f6fa250"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""dc26587b-784f-4367-8757-0f328f3d0c05"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""932dd6ea-be8a-4d65-bbe1-d176c9a037ea"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""45c51c6d-dd18-42ef-8795-920e9f22023d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TypeUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_TypeAD = m_Player.FindAction("TypeAD", throwIfNotFound: true);
        m_Player_TypeWS = m_Player.FindAction("TypeWS", throwIfNotFound: true);
        m_Player_TypeLeftRight = m_Player.FindAction("TypeLeftRight", throwIfNotFound: true);
        m_Player_TypeUpDown = m_Player.FindAction("TypeUpDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_TypeAD;
    private readonly InputAction m_Player_TypeWS;
    private readonly InputAction m_Player_TypeLeftRight;
    private readonly InputAction m_Player_TypeUpDown;
    public struct PlayerActions
    {
        private @StandardInputScheme m_Wrapper;
        public PlayerActions(@StandardInputScheme wrapper) { m_Wrapper = wrapper; }
        public InputAction @TypeAD => m_Wrapper.m_Player_TypeAD;
        public InputAction @TypeWS => m_Wrapper.m_Player_TypeWS;
        public InputAction @TypeLeftRight => m_Wrapper.m_Player_TypeLeftRight;
        public InputAction @TypeUpDown => m_Wrapper.m_Player_TypeUpDown;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @TypeAD.started += instance.OnTypeAD;
            @TypeAD.performed += instance.OnTypeAD;
            @TypeAD.canceled += instance.OnTypeAD;
            @TypeWS.started += instance.OnTypeWS;
            @TypeWS.performed += instance.OnTypeWS;
            @TypeWS.canceled += instance.OnTypeWS;
            @TypeLeftRight.started += instance.OnTypeLeftRight;
            @TypeLeftRight.performed += instance.OnTypeLeftRight;
            @TypeLeftRight.canceled += instance.OnTypeLeftRight;
            @TypeUpDown.started += instance.OnTypeUpDown;
            @TypeUpDown.performed += instance.OnTypeUpDown;
            @TypeUpDown.canceled += instance.OnTypeUpDown;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @TypeAD.started -= instance.OnTypeAD;
            @TypeAD.performed -= instance.OnTypeAD;
            @TypeAD.canceled -= instance.OnTypeAD;
            @TypeWS.started -= instance.OnTypeWS;
            @TypeWS.performed -= instance.OnTypeWS;
            @TypeWS.canceled -= instance.OnTypeWS;
            @TypeLeftRight.started -= instance.OnTypeLeftRight;
            @TypeLeftRight.performed -= instance.OnTypeLeftRight;
            @TypeLeftRight.canceled -= instance.OnTypeLeftRight;
            @TypeUpDown.started -= instance.OnTypeUpDown;
            @TypeUpDown.performed -= instance.OnTypeUpDown;
            @TypeUpDown.canceled -= instance.OnTypeUpDown;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnTypeAD(InputAction.CallbackContext context);
        void OnTypeWS(InputAction.CallbackContext context);
        void OnTypeLeftRight(InputAction.CallbackContext context);
        void OnTypeUpDown(InputAction.CallbackContext context);
    }
}
